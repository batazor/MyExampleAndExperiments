version: '2'

services:

  redis:
    image: redis:3.2.9-alpine
    restart: unless-stopped

  postgres:
    image: postgres:9.6.13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: sentry
    # volumes:
    #  - /data/sentry/postgres:/var/lib/postgresql/data:rw

  sentry:
    image: sentry:${SENTRY_TAG}
    restart: unless-stopped
    links:
    - redis
    - postgres
    ports:
    - 9000:9000
    environment: &environment
      SENTRY_SECRET_KEY: ${SENTRY_SECRET}
      SENTRY_REDIS_HOST: redis
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry

  celerybeat:
    image: sentry:${SENTRY_TAG}
    restart: unless-stopped
    links:
     - redis
     - postgres
    command: "sentry run cron"
    environment: *environment

  celeryworker:
    image: sentry:${SENTRY_TAG}
    restart: unless-stopped
    links:
     - redis
     - postgres
    command: "sentry run worker"
    environment: *environment

  demo_app:
    build: ./demo-app
    ports:
    - 3000:3000
